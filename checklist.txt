[✓]  1. Primary Functions
    [✓] 1. set(): Set a value in cache after making the request specified
    [✓] 2. get(): Get the current value stored for an API
    [✓] 3. delete(): Delete a cached API based on the key entered
    [✓] 4. update(): Update a cached API 

[✓] 2. Secondary Functions 
    [✓] 1. setMulti(): Set multiple values in cache 
    [✓] 2. getMulti(): Get the current value of multiple keys from the cache
    [✓] 3. deleteMulti(): Delete multiple cached APIs
    [✓] 4. flush(): Delete all the data
    [✓] 5. take(): Delete a cached API and return its last value
    [✓] 6. has(): Check if the cache has a key
    [✓] 7. keys(): Return all the keys currently stored in the cache

[✓] 3. Core Functions 
    [✓] 1. checkData()

[✓] 4. Internal Functions 
    [✓] 1. _checkResponseStatus(): Check the response status of a request made
    [✓] 2. _generateError(): Generate Errors with messages based on error templates
    [✓] 3. _processRequest(): Send the request and process the response


[] 5. Misc. 
    [✓] 1. Options for the module
    [] 2. Better error templates
    [✓] 3. TTL and Update loops
    [✓] 4. More organised and uniform format of output for each function 
          whether it be valid response or errors
    [✓] 5. Replace Promises
    [] 6. Identifiers, Interfaces and Outputs

TO-DO
-   Cache options(standardTTL & checkPeriod as of now, maybe forceString)
-   Timed loop that checks each key to see if it needs to be updated
    or has expired(has exceeded its ttl)
-   Delete the key or update its value if the previous condition is met
-   Update the documentation - consistent use of terminology, make it more 
    comprehensive
-   Update the interfaces, and indentifier names
-   Uniform outputs and errors, update the error templates, make throwing
    errors more efficient
-   comprehensive README and logo